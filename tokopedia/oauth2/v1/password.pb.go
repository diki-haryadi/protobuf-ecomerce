// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tokopedia/oauth2/v1/password.proto

package oauth2v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PasswordGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantType    string `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password     string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ClientId     string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,5,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *PasswordGrantRequest) Reset() {
	*x = PasswordGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokopedia_oauth2_v1_password_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordGrantRequest) ProtoMessage() {}

func (x *PasswordGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tokopedia_oauth2_v1_password_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordGrantRequest.ProtoReflect.Descriptor instead.
func (*PasswordGrantRequest) Descriptor() ([]byte, []int) {
	return file_tokopedia_oauth2_v1_password_proto_rawDescGZIP(), []int{0}
}

func (x *PasswordGrantRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *PasswordGrantRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PasswordGrantRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PasswordGrantRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PasswordGrantRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type PasswordGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn        int32  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	TokenType        string `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken     string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Scope            string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Error            string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	ErrorDescription string `protobuf:"bytes,7,opt,name=error_description,json=errorDescription,proto3" json:"error_description,omitempty"`
}

func (x *PasswordGrantResponse) Reset() {
	*x = PasswordGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokopedia_oauth2_v1_password_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordGrantResponse) ProtoMessage() {}

func (x *PasswordGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tokopedia_oauth2_v1_password_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordGrantResponse.ProtoReflect.Descriptor instead.
func (*PasswordGrantResponse) Descriptor() ([]byte, []int) {
	return file_tokopedia_oauth2_v1_password_proto_rawDescGZIP(), []int{1}
}

func (x *PasswordGrantResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *PasswordGrantResponse) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *PasswordGrantResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *PasswordGrantResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *PasswordGrantResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PasswordGrantResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PasswordGrantResponse) GetErrorDescription() string {
	if x != nil {
		return x.ErrorDescription
	}
	return ""
}

var File_tokopedia_oauth2_v1_password_proto protoreflect.FileDescriptor

var file_tokopedia_oauth2_v1_password_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x15,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0xdf, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6f, 0x6b,
	0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31,
	0x42, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69,
	0x6b, 0x69, 0x2d, 0x68, 0x61, 0x72, 0x79, 0x61, 0x64, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2d, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2f, 0x74, 0x6f,
	0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x76,
	0x31, 0x3b, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x4f, 0x58,
	0xaa, 0x02, 0x13, 0x54, 0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x54, 0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64,
	0x69, 0x61, 0x5c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x54,
	0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x5c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x15, 0x54, 0x6f, 0x6b, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x3a, 0x3a, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tokopedia_oauth2_v1_password_proto_rawDescOnce sync.Once
	file_tokopedia_oauth2_v1_password_proto_rawDescData = file_tokopedia_oauth2_v1_password_proto_rawDesc
)

func file_tokopedia_oauth2_v1_password_proto_rawDescGZIP() []byte {
	file_tokopedia_oauth2_v1_password_proto_rawDescOnce.Do(func() {
		file_tokopedia_oauth2_v1_password_proto_rawDescData = protoimpl.X.CompressGZIP(file_tokopedia_oauth2_v1_password_proto_rawDescData)
	})
	return file_tokopedia_oauth2_v1_password_proto_rawDescData
}

var file_tokopedia_oauth2_v1_password_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tokopedia_oauth2_v1_password_proto_goTypes = []interface{}{
	(*PasswordGrantRequest)(nil),  // 0: tokopedia.oauth2.v1.PasswordGrantRequest
	(*PasswordGrantResponse)(nil), // 1: tokopedia.oauth2.v1.PasswordGrantResponse
}
var file_tokopedia_oauth2_v1_password_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tokopedia_oauth2_v1_password_proto_init() }
func file_tokopedia_oauth2_v1_password_proto_init() {
	if File_tokopedia_oauth2_v1_password_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tokopedia_oauth2_v1_password_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokopedia_oauth2_v1_password_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tokopedia_oauth2_v1_password_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tokopedia_oauth2_v1_password_proto_goTypes,
		DependencyIndexes: file_tokopedia_oauth2_v1_password_proto_depIdxs,
		MessageInfos:      file_tokopedia_oauth2_v1_password_proto_msgTypes,
	}.Build()
	File_tokopedia_oauth2_v1_password_proto = out.File
	file_tokopedia_oauth2_v1_password_proto_rawDesc = nil
	file_tokopedia_oauth2_v1_password_proto_goTypes = nil
	file_tokopedia_oauth2_v1_password_proto_depIdxs = nil
}
