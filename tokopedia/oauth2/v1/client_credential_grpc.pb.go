// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: tokopedia/oauth2/v1/client_credential.proto

package oauth2v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ClientCredentialsServiceClient is the client API for ClientCredentialsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ClientCredentialsServiceClient interface {
	ClientCredentialsGrant(ctx context.Context, in *ClientCredentialsGrantRequest, opts ...grpc.CallOption) (*ClientCredentialsGrantResponse, error)
}

type clientCredentialsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClientCredentialsServiceClient(cc grpc.ClientConnInterface) ClientCredentialsServiceClient {
	return &clientCredentialsServiceClient{cc}
}

func (c *clientCredentialsServiceClient) ClientCredentialsGrant(ctx context.Context, in *ClientCredentialsGrantRequest, opts ...grpc.CallOption) (*ClientCredentialsGrantResponse, error) {
	out := new(ClientCredentialsGrantResponse)
	err := c.cc.Invoke(ctx, "/tokopedia.oauth2.v1.ClientCredentialsService/ClientCredentialsGrant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientCredentialsServiceServer is the server API for ClientCredentialsService service.
// All implementations should embed UnimplementedClientCredentialsServiceServer
// for forward compatibility
type ClientCredentialsServiceServer interface {
	ClientCredentialsGrant(context.Context, *ClientCredentialsGrantRequest) (*ClientCredentialsGrantResponse, error)
}

// UnimplementedClientCredentialsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedClientCredentialsServiceServer struct {
}

func (UnimplementedClientCredentialsServiceServer) ClientCredentialsGrant(context.Context, *ClientCredentialsGrantRequest) (*ClientCredentialsGrantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientCredentialsGrant not implemented")
}

// UnsafeClientCredentialsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ClientCredentialsServiceServer will
// result in compilation errors.
type UnsafeClientCredentialsServiceServer interface {
	mustEmbedUnimplementedClientCredentialsServiceServer()
}

func RegisterClientCredentialsServiceServer(s grpc.ServiceRegistrar, srv ClientCredentialsServiceServer) {
	s.RegisterService(&ClientCredentialsService_ServiceDesc, srv)
}

func _ClientCredentialsService_ClientCredentialsGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientCredentialsGrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientCredentialsServiceServer).ClientCredentialsGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokopedia.oauth2.v1.ClientCredentialsService/ClientCredentialsGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientCredentialsServiceServer).ClientCredentialsGrant(ctx, req.(*ClientCredentialsGrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ClientCredentialsService_ServiceDesc is the grpc.ServiceDesc for ClientCredentialsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ClientCredentialsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "tokopedia.oauth2.v1.ClientCredentialsService",
	HandlerType: (*ClientCredentialsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClientCredentialsGrant",
			Handler:    _ClientCredentialsService_ClientCredentialsGrant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tokopedia/oauth2/v1/client_credential.proto",
}
